import java.awt.Graphics;
import java.net.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.Socket;
import java.util.HashMap;
import javax.swing.JComboBox;

import javax.swing.*;

public class ClientPanel extends JPanel {
	
	private JButton addItem, removeItem, sendList, clearAllItems, confirmOrder, submit, cancel;
	private JOptionPane sumOrder;
	private JTextArea infoTxt;
	private JComboBox<String> menuBox;
	private JLabel price, inBasket, orderSumLbl, custInfoLbl;
	private HashMap<String, Integer> basket;
	private HashMap<String, String> menu;
	
	String host;
	int port;
	
	public ClientPanel(HashMap<String, String> menu, String host, int port) {
		
		addItem = new JButton("Add");
		confirmOrder = new JButton("Add");
		removeItem = new JButton("Remove");
		sendList = new JButton("Send");
		clearAllItems = new JButton("Clear cart");
		inBasket = new JLabel("Basket: 0");
		menuBox = new JComboBox<String>();
		sumOrder = new JOptionPane("TEST");
		
		basket = new HashMap<String, Integer>();
		
		this.menu = menu;
		for (String item : menu.keySet()) {
			menuBox.addItem(item);
			basket.put(item, 0);
		}
		
		menuBox.setSelectedItem(null);
		price = new JLabel("Price: 0");
		
		add(menuBox);
		add(price);
		add(inBasket);
		add(addItem);
		add(removeItem);
		add(sendList);
		add(clearAllItems);
		
		// end of graphics
		
		
		// ControlsListener is a private class within this class to handle button events (see below)
		ControlsListener l = new ControlsListener();
		
		 addItem.addActionListener(l);
		 removeItem.addActionListener(l);
		 sendList.addActionListener(l);
		 clearAllItems.addActionListener(l);
		 menuBox.addActionListener(l);
		 confirmOrder.addActionListener(l);
		
	}
	
	
			 
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
	}
	
	// action listener for button clicks
	private class ControlsListener implements ActionListener
    {
        public void actionPerformed(ActionEvent e)
        {
            if(e.getSource() == addItem)
            {
            	String current = menuBox.getSelectedItem().toString();
            	int newVal = basket.get(current) + 1;
            	basket.put(current, newVal);
            	inBasket.setText("Basket: " + Integer.toString(newVal));
            	repaint();
            }
            else if (e.getSource() == removeItem)
            {
            	String current = menuBox.getSelectedItem().toString();
            	int newVal = basket.get(current) - 1;
            	if (newVal < 0 )
            		newVal = 0;
            	basket.put(current, newVal);
            	inBasket.setText("Basket: " + Integer.toString(newVal));
            	repaint();
            	
            } else if (e.getSource() == clearAllItems) {
            	
            	for (String item : basket.keySet()) {
            		basket.put(item, 0);
            	}
            	inBasket.setText("Basket: 0");
            	repaint();
            	
            } else if (e.getSource() == menuBox ) {
            	price.setText("Price: " + menu.get(menuBox.getSelectedItem()).toString());
            	inBasket.setText("Basket: " + Integer.toString(basket.get(menuBox.getSelectedItem())));
            	repaint();
            } else if (e.getSource() == sendList)
            {
            	JFrame diag = new JFrame();
            	JPanel mypanel = new JPanel();
            	mypanel.setSize(400, 150);
            	diag.setSize(400,  150);
            	
            	orderSumLbl = new JLabel("Your order: \n" + basket.toString());
            	submit = new JButton("Submit");
            	cancel = new JButton("Cancel");
            	custInfoLbl = new JLabel("Shipping details:");
            	infoTxt = new JTextArea("Name, Phone, Address");
            	
            	mypanel.add(orderSumLbl);
            	mypanel.add(custInfoLbl);
            	mypanel.add(infoTxt);
            	mypanel.add(submit);
            	mypanel.add(cancel);
            	
            	diag.add(mypanel);
            	
            	diag.setVisible(true);
            	mypanel.setVisible(true);
            	            	
            } else if (e.getSource() == submit) {
            	
            	socket = new Socket(host, 3333);
            	
            }
        }
    }

		

}
